/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QLTV.GUI;

import QLTV.DAO.DangNhap_DAO;
import QLTV.DAO.DocGia_DAO;
import QLTV.DAO.PhieuMuon_DAO;
import QLTV.DAO.PhieuTra_DAO;
import QLTV.DAO.TaiLieu_DAO;
import QLTV.POJO.ChiTietPhieuMuon;
import QLTV.POJO.ChiTietPhieuTra;
import QLTV.POJO.PhieuTra;
import java.awt.Color;
import java.awt.Graphics;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Hashtable;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Administrator
 */
public class QL_TraTaiLieu extends javax.swing.JInternalFrame {

    DefaultTableModel dtm = new DefaultTableModel();
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    Calendar hanTra = Calendar.getInstance();
    boolean check = false, flag = false, checkIn = false;
    String maNV , maPhieu;
    List<String> ds_MaTL = null;
    /**
     * Creates new form QL_MuonTaiLieu
     */
    public QL_TraTaiLieu() {
        initComponents();
        maNV = DangNhap_DAO.layMaNhanVien();
        dtm.addColumn("Mã Phiếu trả");
        dtm.addColumn("Mã Chi Tiết");
        dtm.addColumn("Mã Phiếu mượn");
        dtm.addColumn("Mã Đọc giả");
        dtm.addColumn("Mã Nhân viên");
        dtm.addColumn("Ngày lập");
        tblDSPhieuTra.setModel(dtm);
        List<String> ds_MaPhieuMuon = PhieuMuon_DAO.layDSMaPhieuMuon();
        for (String maPhieuMuon : ds_MaPhieuMuon) {
            cboMaPhieuMuon.addItem(maPhieuMuon);
        }
        cboMaPhieuMuon.setSelectedIndex(-1);
        cboMaPhieuMuon.setRenderer(new DefaultListCellRenderer() {
            public void paint(Graphics g) {
                setForeground(Color.BLACK);
                super.paint(g);
            }
        });
        setEnable_False();
        hienThiDanhSach();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtMaPhieuTra = new javax.swing.JTextField();
        txtMaDocGia = new javax.swing.JTextField();
        txtTenDG = new javax.swing.JTextField();
        txtNgayTra = new javax.swing.JTextField();
        txtTenTL = new javax.swing.JTextField();
        txtSLTra = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cboMaPhieuMuon = new javax.swing.JComboBox<>();
        cboMaTL = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        btnXuat = new javax.swing.JButton();
        btnTKiem = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDSPhieuTra = new javax.swing.JTable();
        nen = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(865, 555));
        setMinimumSize(new java.awt.Dimension(865, 555));
        setPreferredSize(new java.awt.Dimension(865, 555));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chi tiết Phiếu Trả", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 153, 0))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 102));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Mã phiếu trả:");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 102));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Mã đọc giả:");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 0, 102));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Tên đọc giả:");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 0, 102));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Ngày trả:");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 0, 102));
        jLabel7.setText("Số lượng trả:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 0, 102));
        jLabel8.setText("Mã tài liệu:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 0, 102));
        jLabel9.setText("Tên tài liệu:");

        txtMaPhieuTra.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMaPhieuTra.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtMaPhieuTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaPhieuTraActionPerformed(evt);
            }
        });

        txtMaDocGia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMaDocGia.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtMaDocGia.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtMaDocGiaInputMethodTextChanged(evt);
            }
        });
        txtMaDocGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaDocGiaActionPerformed(evt);
            }
        });

        txtTenDG.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTenDG.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTenDG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenDGActionPerformed(evt);
            }
        });

        txtNgayTra.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNgayTra.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNgayTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgayTraActionPerformed(evt);
            }
        });

        txtTenTL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTenTL.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTenTL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenTLActionPerformed(evt);
            }
        });

        txtSLTra.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSLTra.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtSLTra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSLTraFocusLost(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 0, 102));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Mã phiếu mượn:");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        cboMaPhieuMuon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboMaPhieuMuon.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMaPhieuMuonItemStateChanged(evt);
            }
        });

        cboMaTL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboMaTL.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMaTLItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMaDocGia, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(txtMaPhieuTra)
                    .addComponent(txtTenDG)
                    .addComponent(cboMaPhieuMuon, 0, 170, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(51, 51, 51)
                        .addComponent(txtNgayTra, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(37, 37, 37)
                        .addComponent(txtTenTL, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(cboMaTL, 0, 170, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSLTra, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(47, 47, 47))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaPhieuTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(cboMaTL))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTenTL)
                        .addComponent(jLabel9))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboMaPhieuMuon)
                        .addComponent(jLabel6)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMaDocGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSLTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNgayTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtTenDG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 770, 190));

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setForeground(new java.awt.Color(255, 255, 204));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 0, 102));
        jLabel11.setText("QUẢN LÝ TRẢ TÀI LIỆU");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(260, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(231, 231, 231))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 770, 40));

        btnThem.setBackground(new java.awt.Color(255, 204, 51));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnThem.setForeground(new java.awt.Color(102, 0, 102));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        getContentPane().add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 90, -1));

        btnXoa.setBackground(new java.awt.Color(255, 204, 51));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(102, 0, 102));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        getContentPane().add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, 90, -1));

        btnSua.setBackground(new java.awt.Color(255, 204, 51));
        btnSua.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSua.setForeground(new java.awt.Color(102, 0, 102));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        getContentPane().add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, 90, -1));

        btnMoi.setBackground(new java.awt.Color(255, 204, 51));
        btnMoi.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnMoi.setForeground(new java.awt.Color(102, 0, 102));
        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        getContentPane().add(btnMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 260, 90, -1));

        btnXuat.setBackground(new java.awt.Color(255, 204, 51));
        btnXuat.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnXuat.setForeground(new java.awt.Color(102, 0, 102));
        btnXuat.setText("Xuất");
        btnXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatActionPerformed(evt);
            }
        });
        getContentPane().add(btnXuat, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 260, 90, -1));

        btnTKiem.setBackground(new java.awt.Color(255, 204, 51));
        btnTKiem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnTKiem.setForeground(new java.awt.Color(102, 0, 102));
        btnTKiem.setText("Tìm kiếm");
        btnTKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTKiemActionPerformed(evt);
            }
        });
        getContentPane().add(btnTKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 310, 170, -1));

        txtTimKiem.setBackground(new java.awt.Color(204, 255, 204));
        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        getContentPane().add(txtTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, 460, -1));

        tblDSPhieuTra.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblDSPhieuTra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã nhân viên", "Tên nhân viên", "Ca trực", "Tên đăng nhập", "Đăng nhập gần nhất", "Loại nhân viên"
            }
        ));
        tblDSPhieuTra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblDSPhieuTra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDSPhieuTraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDSPhieuTra);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 770, 190));

        nen.setBackground(java.awt.Color.pink);
        nen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nen.png"))); // NOI18N
        nen.setMaximumSize(new java.awt.Dimension(735, 555));
        nen.setMinimumSize(new java.awt.Dimension(735, 555));
        getContentPane().add(nen, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 0, 880, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaPhieuTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaPhieuTraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaPhieuTraActionPerformed

    private void txtMaDocGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaDocGiaActionPerformed

    }//GEN-LAST:event_txtMaDocGiaActionPerformed

    private void txtTenDGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenDGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenDGActionPerformed

    private void txtNgayTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgayTraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNgayTraActionPerformed

    private void txtTenTLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenTLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenTLActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if(txtMaDocGia.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn Phiếu Mượn !!!");
            txtMaDocGia.requestFocus();
            return;
        } else if(txtSLTra.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập Số lượng mượn !!!");
            txtSLTra.requestFocus();
            return;
        }
        
        ChiTietPhieuTra ctpt = new ChiTietPhieuTra();
        ctpt.setMaPhieuTra(txtMaPhieuTra.getText());
        ctpt.setMaPhieu(maPhieu);
        ctpt.setMaPhieuMuon(String.valueOf(cboMaPhieuMuon.getSelectedItem()));
        ctpt.setMaDocGia(txtMaDocGia.getText());
        ctpt.setTenDocGia(txtTenDG.getText());
        ctpt.setMaTaiLieu(String.valueOf(cboMaTL.getSelectedItem()));
        ctpt.setTenTaiLieu(txtTenTL.getText());
        try {
                ctpt.setSoLuongTra(Integer.valueOf(txtSLTra.getText()));
        } catch (NumberFormatException e) {
                txtSLTra.requestFocus();
                return;
        }
        Date NgayTra = Date.valueOf(txtNgayTra.getText());
        ctpt.setNgayTra(NgayTra);
        
        boolean kq = PhieuTra_DAO.themPhieuTra(ctpt, maNV, checkIn);
        if (kq == true) {
            JOptionPane.showMessageDialog(this, "Thêm Phiếu trả Thành công !!");
            hienThiDanhSach();
            if (check_Phat() > 0)
                JOptionPane.showMessageDialog(this, "Đã quá hạn " +check_Phat()+ " ngày !!!");  
            if (cboMaTL.getItemCount() > 1) {
                int remove = JOptionPane.showConfirmDialog(null, "Còn Tài liệu chưa trả. Tiếp tục trả?", "Thông báo",JOptionPane.YES_NO_CANCEL_OPTION);
                if (remove == 0) {
                    cboMaTL.removeItem(cboMaTL.getSelectedItem());
                    cboMaTL.setSelectedIndex(0);
                    String str = "CT", strMa = "";
                    int sl = tblDSPhieuTra.getRowCount() - 1;
                    strMa = (String) String.valueOf(tblDSPhieuTra.getValueAt(sl, 1));
                    strMa = strMa.substring(2, 4);
                    int num = Integer. parseInt(strMa) + 1;
                    if (num < 10)
                       str = "CT0" + num;
                    else str = "CT" + num;
                    maPhieu = str;
                    txtSLTra.setText("");
                    cboMaTL.requestFocus();
                    checkIn = true;
                }
            }
            else setEnable_False();
        }
        else JOptionPane.showMessageDialog(this, "Thêm Phiếu mượn Thất Bại");
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if (txtMaPhieuTra.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn Phiếu trả !!!");
            return;
        }
        
        int delete = JOptionPane.showConfirmDialog(null, "Chắc chắn muốn Xóa Phiếu trả có mã: "+txtMaPhieuTra.getText()+" ?", "Thông báo",JOptionPane.YES_NO_CANCEL_OPTION);
        if (delete == 0) {
            boolean kq = PhieuTra_DAO.xoaPhieuTra(txtMaPhieuTra.getText());
            if (kq == true) {
                JOptionPane.showMessageDialog(this, "Xóa Phiếu trả Thành công !!");
                setEnable_False();
                hienThiDanhSach();
            }
            else JOptionPane.showMessageDialog(this, "Xóa Phiếu trả Thất Bại");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (txtMaPhieuTra.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn Phiếu trả !!!");
            return;
        }
        if (check) {
            ChiTietPhieuTra ctpt = new ChiTietPhieuTra();
            ctpt.setMaPhieuTra(txtMaPhieuTra.getText());
            ctpt.setMaPhieu(maPhieu);
            ctpt.setMaPhieuMuon(String.valueOf(cboMaPhieuMuon.getSelectedItem()));
            ctpt.setMaDocGia(txtMaDocGia.getText());
            ctpt.setTenDocGia(txtTenDG.getText());
            ctpt.setMaTaiLieu(String.valueOf(cboMaTL.getSelectedItem()));
            ctpt.setTenTaiLieu(txtTenTL.getText());
            try {
                ctpt.setSoLuongTra(Integer.valueOf(txtSLTra.getText()));
            } catch (NumberFormatException e) {
                txtSLTra.requestFocus();
                return;
            }
            Date NgayTra = Date.valueOf(txtNgayTra.getText());
            ctpt.setNgayTra(NgayTra);
            
            boolean kq = PhieuTra_DAO.suaPhieuTra(ctpt, maNV);
            if (kq == true) {
                JOptionPane.showMessageDialog(this, "Cập nhật Phiếu trả có mã: " + txtMaPhieuTra.getText() + " thành công!!!");
                setEnable_False();
                hienThiDanhSach();
            }
            else JOptionPane.showMessageDialog(this, "Cập nhật Phiếu trả Thất Bại");
            btnSua.setText("Sửa");
            check = false;
        } else if(!flag) {
            int update = JOptionPane.showConfirmDialog(null, "Chỉnh sửa Phiếu trả có mã: "+txtMaPhieuTra.getText()+" ?", "Thông báo",JOptionPane.YES_NO_CANCEL_OPTION);
            if (update == 0) {
                check = true;
                setEnable_True();
                btnSua.setText("Lưu");
            }
        }
        
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        setEnable_True();
        String strP = "PT", strMaP = "", strM = "CT", strMa = "";
        int sl = tblDSPhieuTra.getRowCount() - 1;
        strMaP = (String) String.valueOf(tblDSPhieuTra.getValueAt(sl, 0));
        strMaP = strMaP.substring(2, 4);
        strMa = (String) String.valueOf(tblDSPhieuTra.getValueAt(sl, 1));
        strMa = strMa.substring(2, 4);
        int numP = Integer. parseInt(strMaP) + 1;
        if (numP < 10)
           strP = "PT0" + numP;
        else strP = "PT" + numP;
        int num = Integer. parseInt(strMa) + 1;
        if (num < 10)
           strM = "CT0" + num;
        else strM = "CT" + num;
        txtMaPhieuTra.setText(strP);
        maPhieu = strM;
        cboMaPhieuMuon.setSelectedIndex(-1);
        txtMaDocGia.setText("");
        txtTenDG.setText("");
        cboMaTL.setSelectedIndex(-1);
        txtTenTL.setText("");
        txtSLTra.setText("");
        Date NgayTra = Date.valueOf(java.time.LocalDate.now());
        txtNgayTra.setText(String.valueOf(NgayTra));
        txtMaDocGia.requestFocus();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnTKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTKiemActionPerformed
       String str = txtTimKiem.getText();
       if(str.startsWith("PT")) {
           hienThiDanhSachTheoMa(str, 0);
       } else if(str.startsWith("PM")) {
           hienThiDanhSachTheoMa(str, 1);
       } else if(str.startsWith("N")) {
           hienThiDanhSachTheoMa(str, 2);
       } else if(str.startsWith("D")) {
           hienThiDanhSachTheoMa(str, 3);
       } else JOptionPane.showMessageDialog(this, "Gợi ý nên tìm kiếm theo mã!\n Mã Phiếu trả: PTXX\n Mã Phiếu mượn: PMXX\n Mã Nhân viên: NVXX\n Mã Đọc giả: DGXX");
    }//GEN-LAST:event_btnTKiemActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
  
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void tblDSPhieuTraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDSPhieuTraMouseClicked
        int row = this.tblDSPhieuTra.getSelectedRow();
        String maPhieuTra = (String) tblDSPhieuTra.getValueAt(row, 0);
        maPhieu = (String) tblDSPhieuTra.getValueAt(row, 1);
        ChiTietPhieuTra chiTietPhieuTra = PhieuTra_DAO.layThongTinChiTietPhieuTra(maPhieuTra, maPhieu);
        txtMaPhieuTra.setText(chiTietPhieuTra.getMaPhieuTra());
        cboMaPhieuMuon.setSelectedItem(String.valueOf(chiTietPhieuTra.getMaPhieuMuon()));
        txtMaDocGia.setText(chiTietPhieuTra.getMaDocGia());
        txtTenDG.setText(chiTietPhieuTra.getTenDocGia());
        cboMaTL.setSelectedItem(String.valueOf(chiTietPhieuTra.getMaTaiLieu()));
        txtTenTL.setText(chiTietPhieuTra.getTenTaiLieu());
        txtSLTra.setText(String.valueOf(chiTietPhieuTra.getSoLuongTra()));
        txtNgayTra.setText(String.valueOf(chiTietPhieuTra.getNgayTra()));
    }//GEN-LAST:event_tblDSPhieuTraMouseClicked

    private void txtMaDocGiaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtMaDocGiaInputMethodTextChanged
        if(txtMaDocGia.getText().length() >= 4) {
            String tenDG = DocGia_DAO.layHoTenDocGia(txtMaDocGia.getText());
            if (tenDG.equals("error")) {
                txtMaDocGia.setText("");
                txtMaDocGia.requestFocus();
                JOptionPane.showMessageDialog(this, "Không tìm thấy Đọc giả !! Vui lòng nhập lại Mã Đọc giả !!!");                
                return;
            } else txtTenDG.setText(tenDG);
        }
    }//GEN-LAST:event_txtMaDocGiaInputMethodTextChanged

    private void cboMaPhieuMuonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMaPhieuMuonItemStateChanged
        ChiTietPhieuMuon chiTietPhieuMuon = PhieuMuon_DAO.layThongTinChiTietPhieuMuon(String.valueOf(evt.getItem()),"CT");
        txtMaDocGia.setText(chiTietPhieuMuon.getMaDocGia());
        txtTenDG.setText(chiTietPhieuMuon.getTenDocGia());
        loadCboMaTL(String.valueOf(evt.getItem()));
    }//GEN-LAST:event_cboMaPhieuMuonItemStateChanged

    private void txtSLTraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSLTraFocusLost
        int slTra = -1, checkINT = 1;
        try {
            slTra = Integer.valueOf(txtSLTra.getText());
            checkINT = 0;
        } catch (Exception e) {
            checkINT = 1;
            JOptionPane.showMessageDialog(this, "Vui lòng chỉ nhập số !!!");
        }
        if(checkINT == 0) {
            int slMuon = PhieuMuon_DAO.laySoLuongMuon(String.valueOf(cboMaPhieuMuon.getSelectedItem()), String.valueOf(cboMaTL.getSelectedItem()));
            if(slTra > slMuon) {
                check = false;
                flag = true;
                txtSLTra.setText("");
                txtSLTra.requestFocus();
                JOptionPane.showMessageDialog(this, "Số Tài liệu đã mượn là: " + slMuon);
            } else {
                check = true;
                flag = false;
                if(slTra == slMuon)
                    PhieuTra_DAO.capNhatTrangThaiPhieuMuon(String.valueOf(cboMaPhieuMuon.getSelectedItem()), 0);
                else PhieuTra_DAO.capNhatTrangThaiPhieuMuon(String.valueOf(cboMaPhieuMuon.getSelectedItem()), 1);
            }
        }
    }//GEN-LAST:event_txtSLTraFocusLost

    private void btnXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatActionPerformed
        if (txtMaPhieuTra.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn Phiếu trả !!!");
            return;
        }
        xuatPhieuTra();
    }//GEN-LAST:event_btnXuatActionPerformed

    private void cboMaTLItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMaTLItemStateChanged
        String name = TaiLieu_DAO.layTenTaiLieu(String.valueOf(cboMaTL.getSelectedItem()));
        txtTenTL.setText(name);
        txtSLTra.requestFocus();
    }//GEN-LAST:event_cboMaTLItemStateChanged

    private void loadCboMaTL(String ma) {
        if(ds_MaTL != null)
            cboMaTL.removeAllItems();
        ds_MaTL = PhieuTra_DAO.layDSMaTL(ma);
        for (String maTL : ds_MaTL) {
            cboMaTL.addItem(maTL);
        }
        //cboMaTL.setSelectedIndex(-1);
        cboMaTL.setRenderer(new DefaultListCellRenderer() {
            public void paint(Graphics g) {
                setForeground(Color.BLACK);
                super.paint(g);
            }
        });
    }
    
    private void hienThiDanhSach() {
        ArrayList<PhieuTra> ds = PhieuTra_DAO.layDSPhieuTra();
        dtm.setRowCount(0);
        for(PhieuTra pt: ds) {
            Vector<Object> v = new Vector<Object>();
            v.add(pt.getMaPhieuTra());
            v.add(pt.getMaPhieu());
            v.add(pt.getMaPhieuMuon());
            v.add(pt.getMaDG());
            v.add(pt.getMaNVLap());
            v.add(pt.getNgayLap());
            dtm.addRow(v);
        }
        tblDSPhieuTra.setModel(dtm);
    }
    
    private void xuatPhieuTra() {
        try {
            Hashtable map = new Hashtable();
            JasperReport rpt = JasperCompileManager.compileReport("src/QLTV/REPORT/rptPhieuTra.jrxml");
            map.put("sMaPhieuTra", txtMaPhieuTra.getText());
            String connectionURL = PhieuTra_DAO.getConnectionURL();
            System.out.println(connectionURL);
            Connection conn = DriverManager.getConnection(connectionURL);
            JasperPrint p = JasperFillManager.fillReport(rpt, map, conn);
            JasperViewer.viewReport(p, false);
        } catch (Exception e) { e.printStackTrace(); }
    }
    
    private void hienThiDanhSachTheoMa(String ma, int n) {
        ArrayList<PhieuTra> ds = PhieuTra_DAO.layDSPhieuTraTheoMa(ma, n);
        dtm.setRowCount(0);
        for(PhieuTra pt: ds) {
            Vector<Object> v = new Vector<Object>();
            v.add(pt.getMaPhieuTra());
            v.add(pt.getMaPhieu());
            v.add(pt.getMaPhieuMuon());
            v.add(pt.getMaDG());
            v.add(pt.getMaNVLap());
            v.add(pt.getNgayLap());
            dtm.addRow(v);
        }
        tblDSPhieuTra.setModel(dtm);
    }
    
    private int check_Phat() {
        String hanTra, ngayTra;
        hanTra = PhieuMuon_DAO.layHanTra(String.valueOf(cboMaPhieuMuon.getSelectedItem()), String.valueOf(cboMaTL.getSelectedItem()));
        Date NgayTra = Date.valueOf(java.time.LocalDate.now());
        ngayTra = String.valueOf(NgayTra);
        hanTra = hanTra.substring(8);
        ngayTra = ngayTra.substring(8);
        return Integer.valueOf(ngayTra) - Integer.valueOf(hanTra);
    }
    
    private void setEnable_False() {
        txtMaPhieuTra.setEnabled(false);
        txtMaDocGia.setEnabled(false);
        txtTenDG.setEnabled(false);
        cboMaTL.setEnabled(false);
        txtTenTL.setEnabled(false);
        txtSLTra.setEnabled(false);
        txtNgayTra.setEnabled(false);
        cboMaPhieuMuon.setEnabled(false);        
        btnThem.setEnabled(false);
        checkIn = false;
    }
    
    private void setEnable_True() {
        cboMaPhieuMuon.setEnabled(true);  
        txtSLTra.setEnabled(true);       
        btnThem.setEnabled(true);
        cboMaTL.setEnabled(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnTKiem;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuat;
    private javax.swing.JComboBox<String> cboMaPhieuMuon;
    private javax.swing.JComboBox<String> cboMaTL;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nen;
    private javax.swing.JTable tblDSPhieuTra;
    private javax.swing.JTextField txtMaDocGia;
    private javax.swing.JTextField txtMaPhieuTra;
    private javax.swing.JTextField txtNgayTra;
    private javax.swing.JTextField txtSLTra;
    private javax.swing.JTextField txtTenDG;
    private javax.swing.JTextField txtTenTL;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
